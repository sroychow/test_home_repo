UNAME    = $(shell uname)
EXE      = efficiency
 
VPATH  = .:./interface
vpath %.h ./interface

CSUF   = cc
HSUF   = h
DICTC  = Dict.$(CSUF)
DICTH  = $(patsubst %.$(CSUF),%.h,$(DICTC))

#SRCS   = $(wildcard src/*.$(CSUF))
SRCS   = src/PhysicsObjects.cc src/AnaBase.cc src/SelectionEfficiency.cc src/efficiency.cc src/MVASkim.cc
OBJS   = $(patsubst %.$(CSUF), %.o, $(SRCS))

LDFLAGS  = -g
SOFLAGS  = -shared 
CXXFLAGS = -I./interface -I./

CXX       = g++
CXXFLAGS += -Wall -Wno-deprecated

LIBS = 

HDRS = $(wildcard interface/*.$(HSUF))
HDRS_DICT = interface/PhysicsObjects.h interface/LinkDef.h

bin: $(EXE) 
all: 
	gmake cint 
	gmake bin 
cint: $(DICTC) 
 
$(DICTC): $(HDRS_DICT)
	@echo "Generating dictionary $(DICTC) and $(DICTH) ..."
	rootcint -f $@ -c $(CXXFLAGS) $^
	perl -pi -e 's#interface/##' $(DICTH)
	@mv $(DICTC) src/ 
	@mv $(DICTH) interface/
 
$(EXE): $(OBJS) src/Dict.o
	$(CXX) $(LDFLAGS) $^ -o $@ $(LIBS) `root-config --libs` -lTMVA
 
# Create object files
%.o : %.$(CSUF)
	$(CXX) $(CXXFLAGS) `root-config --cflags` -o $@ -c $<

# makedepend
depend: $(SRCS:.$(CSUF)=.$(CSUF).dep)
	@cat $(notdir $^) > Makefile.dep
	@-rm -f $(notdir $^) $(patsubst %,%.bak,$(notdir $^))
%.dep:
	@touch $(notdir $@)
	rmkdepend -f$(notdir $@) -- $(CXXFLAGS) `root-config --cflags` -- $*
include Makefile.dep

# Clean 
.PHONY   : clean 
clean : 
	@-rm $(OBJS) $(EXE) interface/$(DICTH) src/$(DICTC) src/Dict.o
